#summary Get Pass Details (by pass id)

= Get Pass Details (by pass id) =

|| *URI* || `https://api.passkit.com/v1/pass/get/passid/`<font color="blue">{passId}</font>` `<font color="grey"> _/?format=xml_ (optional)</font> ||
|| *Verb* || GET ||
|| *Auth* || Yes ||

Gets the pass details based on the pass id. The function returns a result of pass meta -and field data.

== URI Parameters ==

  * <font color="blue">*passId*</font> <font color="green">_(string)_</font> The unqiue id of the pass.

=== cURL Syntax ===

<code>curl --digest -u {APIKey}:{APISecret} "https://api.passkit.com/v1/pass/get/passid/{passId}"</code>
----
  
== Response Examples ==

A successful request should receive the following response:

==== JSON Format ====

<code language="json">
{
    "success":true,
    "serialNumber":"serialNumber",
    "templateName":"Lesson package",
    "templateLastUpdated":"2013-02-08T01:02:55+00:00",
    "passID":"passId",
    "passRecord":
    {
        "passMeta":
        {
            "passStatus":"Active",
            "issueDate":"2013-02-10T08:19:30+00:00",
            "passbookSerial":"passbookSerial",
            "shareID":"shareId"
        },
        "passData":
        {
            "Student name":"Test student",
            "Balance":"8",
            "Issue date":"2013-02-10",
            "Expiry date":"2014-02-10",
            "barcodeContent":"barcodeContent"
        }
    }
}
</code>

==== XML Format ====

_Note that for XML responses, spaces in tag names will be replaced by 'middle dot' (·).  If a tag starts with an invalid character (E.g. a Number), the tag will be prexied with two underscores (`__`_)_
{{{
<?xml version="1.0"?>
<PassKit_API_Response>
    <success>1</success>
    <serialNumber>serialNumber</serialNumber>
    <templateName>Lesson package</templateName>
    <templateLastUpdated>2013-02-08T01:02:55+00:00</templateLastUpdated>
    <passID>passId</passID>
    <passRecord>
        <passMeta>
            <passStatus>Active</passStatus>
            <issueDate>2013-02-10T08:19:30+00:00</issueDate>
            <passbookSerial>passbookSerial</passbookSerial>
            <shareID>shareId</shareID>
        </passMeta>
        <passData>
            <Student·name>Test student</Student·name>
            <Balance>8</Balance>
            <Issue·date>2013-02-10</Issue·date>
            <Expiry·date>2014-02-10</Expiry·date>
            <barcodeContent>barcodeContent</barcodeContent>
        </passData>
    </passRecord>
</PassKit_API_Response>

}}}

== Implementation examples ==

Download latest PassKit PHP -and/or C# SDK: https://code.google.com/p/passkit/downloads/list

==== PHP Implementation =====

{{{
<?php
/**
* Example: Get pass details
* URI: https://code.google.com/p/passkit/wiki/GetPassDetailsTemplateSerial
*/

// Include passkit api file
require_once ('class-PassKit.php');

// Set variables
$api_key = "apiKey"; // Add your PassKit API Key
$api_secret = "apiSecret"; // Add your PassKit API Secret
$template_name = "My template"; // Add your template name here
$pass_serial = "Pass serial"; // Add your pass serial here
$unique_pass_id = "Unique pass id"; // Add your unique pass id here

// Create new PassKit instance
$pk = new PassKit($apiKey, $apiSecret);

// Get the pass details via the unique pass id
$pk->set_pass_id($unique_pass_id);
// Need to call pass_validate before get_pass_details
$pk->pass_validate();
$pass_details = $pk->get_pass_details();
// Print results
print_r($pass_details);
?>
}}}

==== C# Implementation ====
{{{
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.ComponentModel;
using System.Text;
using System.Reflection;
// Make sure to include PassKitAPIWrapper class (takes care of all communication with the API)
using PassKitAPIWrapper;

namespace PassKitWebDemo
{
    public partial class Default : System.Web.UI.Page
    {
        // Set the image template
        string template_name = "My template";
        // Set the pass serial
        string pass_serial = "Pass serial";
        // Set the unique pass id
        string unique_pass_id = "Unique pass id";

        // Initialize new instance of PassKit API wrapper
        PassKit pk = new PassKit(apiAccount, apiSecret);

        // Get the pass details via the unqiue pass id
        PassKitResponse result = pk.GetPassDetails(unique_pass_id);
        // Do something with result
    }
}
}}}

<table border="0">
  <tr>
    <td width="361"><g:plusone size="medium"></g:plusone></td>
    <td width="353">[http://PassKit.com/ PassKit Home Page]</td>
    <td width="128">[https://create.passkit.com Register with PassKit]</td>
  </tr>
</table>